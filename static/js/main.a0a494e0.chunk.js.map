{"version":3,"sources":["fonts/fontawesome-webfont.eot","component/Result.js","component/Body.js","App.js","component/Detail.js","component/Router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Result","props","results","react_default","a","createElement","className","map","items","name","key","src","alt","style","fontWeight","react_router_dom","to","pathname","concat","state","docID","type","Body","result","this","id","onSubmit","formSubmit","placeholder","required","length","location","error","isSubmit","component_Result","React","Component","API_KEY","App","_callee","e","sName","pName","gApi","gApi_data","latlong","api_call","data","gotResult","regenerator_default","wrap","_context","prev","next","preventDefault","_this","setState","target","elements","doc","value","place","fetch","sent","json","console","log","stop","getDocArr","localStorage","getItem","DocAr","JSON","parse","docArrnew","stringify","setItem","component_Body","Detail","countArr","docDt","docArr","undefined","i","paddingTop","practice","address","color","Router","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","component_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0a494e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fontawesome-webfont.674f50d2.eot\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Result = (props) => {\r\n    const results = props.results;\r\n    //return `fdsffsd ${results}`;\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n            results.map( (items) => {\r\n                \r\n                const name = items['profile']['first_name'] + ' ' + items['profile']['last_name']\r\n                return(                                                \r\n                    <div className=\"col-lg-6\" key={items['uid']}>\r\n                        <div className=\"single-travel media pb-70\">\r\n                            <img className=\"img-fluid d-flex  mr-3\" src={items['profile']['image_url']} alt={name} />                            \r\n                            <div className=\"media-body align-self-center\">\r\n                                <h4 className=\"mt-0\">\r\n                                    <span style={{fontWeight: \"bold\"}}>                                        \r\n                                        <Link to={{\r\n                                         pathname: `/Detail/${items['uid']}`,\r\n                                         state: {docID: items['uid']}\r\n                                        }}>{name}</Link>\r\n                                    </span>\r\n                                </h4>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Specialist:</span> {items['specialties'][0]? items['specialties'][0]['uid']: ''}</p>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Department:</span> {items['specialties'][0]? items['specialties'][0]['name']: ''}</p>\r\n                                <p><span style={{fontWeight: \"bold\"}}>Info:</span> {items['specialties'][0]? items['specialties'][0]['description']: ''}</p>\r\n                                \r\n                                 <button type=\"button\" className=\"btn btn-sm btn-default\">\r\n                                     <Link to={{\r\n                                         pathname: `/Detail/${items['uid']}`,\r\n                                         state: {docID: items['uid']}\r\n                                        }}>\r\n                                    Profile >>\r\n                                    </Link>\r\n                                </button>                       \r\n                            </div>\r\n                        </div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                    </div>\r\n                                          \r\n                )\r\n            })}\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Result","import React from 'react';\r\n\r\nimport '../css/bootstrap.css';\r\nimport '../css/main.css';\r\nimport '../css/fa.css';\r\nimport Result from './Result';\r\n\r\n\r\nclass Body extends React.Component{    \r\n    render(){\r\n        const result = this.props.result;\r\n        return(\r\n            <section className=\"travel-area section-gap\" id=\"travel\">\r\n                <div className=\"container\">\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center align-items-center d-flex\">\r\n                        <div className=\"col-lg-8\">\r\n                            <form  onSubmit={this.props.formSubmit}>\r\n                            <div id=\"imaginary_container\"> \r\n                                <div className=\"input-group stylish-input-group\">\r\n                                    \r\n                                    <input \r\n                                        type=\"text\" \r\n                                        name=\"doc\"\r\n                                        className=\"form-control\"  \r\n                                        placeholder=\"type category (ex: orthopedic, vision) \" \r\n                                        required=\"\" />\r\n                                        <input \r\n                                        type=\"text\" \r\n                                        name=\"place\"\r\n                                        className=\"form-control\"  \r\n                                        placeholder=\"Location\" \r\n                                        required />\r\n                                        <span className=\"btn btn-sm btn-info\">\r\n                                            <button type=\"submit\" className=\"btn btn-sm btn-info\">\r\n                                                search\r\n                                            </button>  \r\n                                        </span>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            </form> \r\n                            <p className=\"mt-20 text-center text-white\">result</p>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            \r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"menu-content pb-70 col-lg-8\">\r\n                        <div className=\"title text-center\">\r\n                            <h1 className=\"mb-10\">Search nearest doctor</h1>\r\n                            <p>Type category and place in search box, result will be shown below</p>\r\n                            {result.length < 1 ? '' : <p> Total {result.length} doctors found {this.props.location === 'not' ? '' : ' in ' + this.props.location }!</p> }\r\n                        </div>\r\n                    </div>\r\n                </div>\t\t\t\t\t\t\r\n                \r\n                    {this.props.error === 'not'? '' : <p className=\"text-center text-warning\">No doctor found in {this.props.location} with your search. Try again!</p>   }\r\n                    {result.length < 1 ? \r\n                        this.props.isSubmit === \"not\"? <p className=\"text-center\">Type something and press search button to get result</p>\r\n                        :\r\n                        <p className=\"text-center lead\">Loading.......</p>      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                \r\n                    :\r\n                    <Result results={result} />                                                         \r\n                    }\r\n            </div>\t\t\t\t\t\r\n        </section>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Body;","import React from 'react';\nimport Body from './component/Body';\n\nconst API_KEY = '9e5403e96d81f76af5b0202716529bcd';\nclass App extends React.Component{\n\n    state = {\n      result : [],\n      error: 'not',\n      isSubmit: 'not',\n      location: 'not'\n    }\n    \n  \n  formSubmit = async (e) => {    \n    e.preventDefault();\n    this.setState({isSubmit: 'yes', result: []});\n    const sName = e.target.elements.doc.value;\n    const pName = e.target.elements.place.value;\n    \n    const gApi = await fetch(\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${pName}&key=AIzaSyBbwiTiqvNsHwXsR5cIeyTm_L6DvUj3T28`\n    );\n    const gApi_data = await gApi.json();\n    //console.log(gApi_data);\n    if(gApi_data['status'] === 'OK'){\n      const location = gApi_data['results'][0]['formatted_address'];\n      const latlong = gApi_data['results'][0]['geometry']['location']['lat'] + ',' + gApi_data['results'][0]['geometry']['location']['lng'];\n      console.log(latlong);\n      const api_call = await fetch(\n        `https://api.betterdoctor.com/2016-03-01/doctors?query=${sName}&location=${latlong},100&user_location=&skip=0&limit=30&user_key=${API_KEY}`\n      );\n      const data = await api_call.json();\n      if(!data['meta']['error']){     \n        const gotResult = data['data'];\n        if(gotResult.length < 1){\n          this.setState({error: 'yes', isSubmit: 'not', location});\n        }else{\n          this.setState({\n            error: 'not',\n            isSubmit: 'not',\n            result: gotResult,\n            location\n          });\n        }\n      }else{\n        this.setState({error: 'yes', isSubmit: 'not', location});\n      }\n    }else{\n      this.setState({error: 'yes', isSubmit: 'not', location: 'not'});\n    }\n    \n  }\n  componentDidMount(){\n    const getDocArr = localStorage.getItem(\"docArr\");\n    const location = localStorage.getItem(\"location\");\n    if(getDocArr !== null){\n      const DocAr = JSON.parse(getDocArr);\n      this.setState({ result: DocAr });\n      this.setState({ location });\n    }\n  }\n  \n  componentDidUpdate(){\n    const docArrnew = JSON.stringify(this.state.result);\n    localStorage.setItem(\"docArr\", docArrnew);\n    localStorage.setItem(\"location\", this.state.location);\n  }\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n          \n        <Body formSubmit={this.formSubmit} result={this.state.result} error={this.state.error} isSubmit={this.state.isSubmit} location={this.state.location} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/bootstrap.css';\r\nimport '../css/main.css';\r\nimport '../css/fa.css';\r\nimport '../fonts/fontawesome-webfont.eot';\r\n\r\nconst Detail = (props) => {\r\n    \r\n        var countArr = 0;\r\n        var docDt = [];\r\n        var docArr = JSON.parse(localStorage.getItem(\"docArr\"));\r\n        var docID = props.location.state.docID;\r\n        var name;\r\n        if(docID !== undefined && docArr.length > 0){\r\n            countArr = docArr.length;\r\n            for(var i=0; i < countArr + 1; i++){\r\n                if(docArr[i]['uid'] === docID){\r\n                    docDt = docArr[i];\r\n                    name = docDt['profile']['first_name'] + ' ' + docDt['profile']['last_name']\r\n                    break;\r\n                }else{\r\n                    docDt = []\r\n                }\r\n            }            \r\n        }\r\n        \r\n        return(\r\n            <div className=\"post-wrapper pt-100\" style={{paddingTop: '20px'}}>\r\n                <section className=\"post-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-lg-6 offset-lg-6\">\r\n                            \r\n                            <br />\r\n                            <br />\r\n                                {countArr < 1 ? \r\n                                <h4 className=\"text-center\"><span style={{fontWeight: \"bold\"}}>Sorry!</span> No doctor found!</h4>\r\n                                :\r\n                                <div className=\"single-page-post\">\r\n                                    <img className=\"img-fluid text-center\" src={docDt['profile']['image_url']} alt={name} />\r\n                                    <div className=\"top-wrapper \">\r\n                                        <div className=\"row d-flex justify-content-between\">\r\n                                            <h2 className=\"col-lg-8 col-md-12 text-uppercase\">\r\n                                                {name}\r\n                                            </h2>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"single-post-content\">\r\n                                        <p><span style={{fontWeight: \"bold\"}}>Specialist:</span> {docDt['specialties'][0]? docDt['specialties'][0]['uid']: ''}</p>\r\n                                        <p><span style={{fontWeight: \"bold\"}}>Department:</span> {docDt['specialties'][0]? docDt['specialties'][0]['name']: ''}</p>\r\n                                        <p><span style={{fontWeight: \"bold\"}}>Info:</span> {docDt['specialties'][0]? docDt['specialties'][0]['description']: ''}</p>                                      \r\n                                        <p><span style={{fontWeight: \"bold\"}}>Bio:</span> {docDt['profile']['bio']? docDt['profile']['bio']: ''}</p>\r\n\r\n                                        <div className=\"bottom-wrapper\"></div> \r\n\r\n                                        <h4 className=\"text-uppercase\">\r\n                                           Practices:\r\n                                        </h4>\r\n                                        <br />\r\n                                        {\r\n                                         docDt['practices'].map( (practice) => {\r\n                                             var address = practice['visit_address']['street'] + ', ' + practice['visit_address']['city'] + ', '+ practice['visit_address']['state_long'] +', ' + practice['visit_address']['zip'];\r\n                                            return(\r\n                                                <div key={practice['name']}>\r\n                                                    <h5>{practice['name']}</h5>\r\n                                                    <p>\r\n                                                    <span style={{fontWeight: \"bold\"}}><i className=\"fa fa-home\"></i>:</span> {address}<br />\r\n                                                    <span style={{fontWeight: \"bold\"}}><i className=\"fa fa-phone\"></i>:</span> {practice['phones'][0]['number']}</p>\r\n                                                </div>\r\n                                            )\r\n                                         } )   \r\n                                        }\r\n                                    \r\n                                    </div>\r\n                                    <div className=\"bottom-wrapper\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-4 single-b-wrap col-md-12\">\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                            \r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                                }                                    \r\n                                 <button style={{color: '#fff'}} type=\"submit\" className=\"btn btn-default\">\r\n                                    <Link to=\"/\">{'<<< Back to homepage'}</Link>\r\n                                </button>  \r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                            </div>                    \r\n                        </div>\r\n                    </div>    \r\n                </section>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport App from '../App';\r\nimport Detail from './Detail';\r\n\r\nconst Router = () => {\r\n    return(\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path=\"/\" component={App} exact/>\r\n                <Route path=\"/Detail\" component={App} exact/>\r\n                <Route path=\"/Detail/:id\" component={Detail} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default Router; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './component/Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}